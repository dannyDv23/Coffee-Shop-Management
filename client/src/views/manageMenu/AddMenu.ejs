<div class="page-inner">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Add New Product</div>
                </div>
                <div class="card-body">
                    <form id="addMenuForm">
                        <div class="row">
                            <div class="col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label for="name-product">Name Product</label>
                                    <input type="text" class="form-control" id="name-product"
                                        placeholder="Enter Product Name" required />
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label for="price-product">Price</label>
                                    <input type="number" class="form-control" id="price-product"
                                        placeholder="Enter Price" min="0" required />
                                </div>
                            </div>
                            <div class="col-md-12">
                                <div>
                                    <div class="card-header">
                                        <div class="d-flex align-items-center">
                                            <h4 class="card-title">Add Material</h4>
                                            <button type="button" class="btn btn-primary btn-round ms-auto"
                                                data-bs-toggle="modal" data-bs-target="#addRowModal">
                                                <i class="fa fa-plus"></i> Add Row
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <!-- Modal -->
                                        <div class="modal fade" id="addRowModal" tabindex="-1" role="dialog"
                                            aria-hidden="true">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header border-0">
                                                        <h5 class="modal-title"><span class="fw-mediumbold"> New</span>
                                                            <span class="fw-light"> Row </span>
                                                        </h5>
                                                        <button type="button" class="close" data-bs-dismiss="modal"
                                                            aria-label="Close"><span
                                                                aria-hidden="true">&times;</span></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <form id="materialSelectionForm">
                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    <div class="form-group form-group-default">
                                                                        <label for="materialSelect">Select
                                                                            Material</label>
                                                                        <select id="materialSelect" class="form-control"
                                                                            onchange="updateMaterialUnit()">
                                                                            <option value="">Select a material</option>
                                                                            <% materials.forEach(material=> { %>
                                                                                <option value="<%= material._id %>"
                                                                                    data-name="<%= material.name %>"
                                                                                    data-quantity="<%= material.totalQuantity %>"
                                                                                    data-unit="<%= material.unit %>">
                                                                                    <%= material.name %> (Available: <%=
                                                                                            material.totalQuantity %>
                                                                                            <%= material.unit %>)
                                                                                </option>
                                                                                <% }) %>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="form-group form-group-default">
                                                                        <label>Quantity</label>
                                                                        <input id="addMaterialQuantity" type="number"
                                                                            class="form-control"
                                                                            placeholder="Enter quantity" min="1"
                                                                            required />
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="form-group form-group-default">
                                                                        <label>Unit</label>
                                                                        <input id="addMaterialUnit" type="text"
                                                                            class="form-control" placeholder="Unit"
                                                                            readonly />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </form>
                                                    </div>
                                                    <div class="modal-footer border-0">
                                                        <button type="button" id="addRowButton"
                                                            class="btn btn-primary">Add</button>
                                                        <button type="button" class="btn btn-danger"
                                                            data-bs-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="table-responsive">
                                            <table id="add-row" class="display table table-striped table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Name Material</th>
                                                        <th>Quantity</th>
                                                        <th>Unit</th>
                                                        <th style="width: 10%">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="materialTableBody">
                                                    <!-- Dynamically added rows will appear here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-action">
                            <button type="button" id="submitFormButton" class="btn btn-success">Submit</button>
                            <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="module">
    import { apiFetch } from '../js/apiFetchUtils.js';

    let materials = [];

    document.getElementById('addRowButton').addEventListener('click', addRow);
    document.getElementById('submitFormButton').addEventListener('click', submitForm);

    function addRow() {
        const materialSelect = document.getElementById('materialSelect');
        const quantityInput = document.getElementById('addMaterialQuantity');
        const unitInput = document.getElementById('addMaterialUnit');
        const materialId = materialSelect.value;
        const quantity = parseInt(quantityInput.value, 10);

        if (!materialId || quantity <= 0 || isNaN(quantity)) {
            alert('Please select a valid material and enter a positive quantity.');
            return;
        }

        const availableQuantity = parseInt(materialSelect.options[materialSelect.selectedIndex].getAttribute('data-quantity'), 10);

        if (quantity > availableQuantity) {
            alert(`Quantity exceeds available stock. Available: ${availableQuantity}`);
            return;
        }

        const existingMaterialIndex = materials.findIndex(material => material.id === materialId);
        if (existingMaterialIndex !== -1) {
            alert('This material has already been added. Please edit the existing entry if needed.');
            return;
        }

        const newMaterial = {
            id: materialId,
            name: materialSelect.options[materialSelect.selectedIndex].dataset.name,
            quantity: quantity,
            unit: unitInput.value
        };

        materials.push(newMaterial);
        loadMaterials();
        clearModalFields();
        $('#addRowModal').modal('hide');
    }

    function loadMaterials() {
        const tableBody = document.getElementById('materialTableBody');
        tableBody.innerHTML = '';

        materials.forEach((material, index) => {
            const row = document.createElement('tr');
            row.innerHTML = `
                <td>${material.name}</td>
                <td>${material.quantity}</td>
                <td>${material.unit}</td>
                <td style="display: flex;">
                    <button type="button" class="btn btn-link btn-primary" onclick="editRow(${index})"><i class="fa fa-edit"></i></button>
                    <button type="button" class="btn btn-link btn-danger" onclick="removeRow(${index})"><i class="fa fa-times"></i></button>
                </td>
            `;
            tableBody.appendChild(row);
        });
    }

    function removeRow(index) {
        materials.splice(index, 1);
        loadMaterials();
    }

    function editRow(index) {
        const material = materials[index];
        document.getElementById('materialSelect').value = material.id;
        document.getElementById('addMaterialQuantity').value = material.quantity;
        document.getElementById('addMaterialUnit').value = material.unit;
        materials.splice(index, 1);
        $('#addRowModal').modal('show');
    }

    function updateMaterialUnit() {
        const selectedMaterial = document.getElementById('materialSelect');
        const unitInput = document.getElementById('addMaterialUnit');
        unitInput.value = selectedMaterial.options[selectedMaterial.selectedIndex].dataset.unit || '';
    }

    function clearModalFields() {
        document.getElementById('materialSelect').selectedIndex = 0;
        document.getElementById('addMaterialQuantity').value = '';
        document.getElementById('addMaterialUnit').value = '';
    }

    function submitForm(event) {
        event.preventDefault();
        const productName = document.getElementById('name-product').value;
        const productPrice = parseFloat(document.getElementById('price-product').value);

        if (!productName || isNaN(productPrice) || productPrice <= 0 || materials.length === 0) {
            alert('Please complete all fields and add at least one material.');
            return;
        }

        const data = {
            name: productName,
            price: productPrice,
            materials: materials.map(material => ({
                materialId: material.id,
                quantityUsed: material.quantity
            }))
        };

        console.log("Submitting data:", data);

        apiFetch('http://152.42.165.4:3000/api/menu', {
            method: 'POST',
            body: JSON.stringify(data),
        })
        .then(response => {
            console.log('Success:', response);
            alert('Data submitted successfully!');
            location.reload(); // Refresh the page or clear fields as needed
        })
        .catch(error => {
            console.error('Error:', error);
            alert('There was an error submitting the data');
        });
    }
</script>
