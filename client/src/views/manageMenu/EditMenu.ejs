<div class="page-inner">
    <div class="row">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header">
                    <div class="card-title">Edit Product</div>
                </div>
                <div class="card-body">
                    <form id="importMaterialForm">
                        <div class="row">
                            <div class="col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label for="material2">Name material</label>
                                    <input type="text" class="form-control" id="material2" value="<%=menus.name %>"
                                        placeholder="Enter Name Material" required />
                                </div>
                            </div>
                            <div class="col-md-6 col-lg-6">
                                <div class="form-group">
                                    <label for="price-product">Price</label>
                                    <input type="number" class="form-control" id="price-product"
                                        placeholder="Enter Price" min="0" value="<%=menus.price %>" required />
                                </div>
                            </div>

                            <!-- Add Material Section -->
                            <div class="col-md-12">
                                <div>
                                    <div class="card-header">
                                        <div class="d-flex align-items-center">
                                            <h4 class="card-title">Add Material</h4>
                                            <button type="button" class="btn btn-primary btn-round ms-auto"
                                                data-bs-toggle="modal" data-bs-target="#addRowModal">
                                                <i class="fa fa-plus"></i> Add / Edit Material
                                            </button>
                                        </div>
                                    </div>
                                    <div class="card-body">
                                        <!-- Modal -->
                                        <div class="modal fade" id="addRowModal" tabindex="-1" role="dialog"
                                            aria-hidden="true">
                                            <div class="modal-dialog" role="document">
                                                <div class="modal-content">
                                                    <div class="modal-header border-0">
                                                        <h5 class="modal-title">Add or Edit Material</h5>
                                                        <button type="button" class="close" data-dismiss="modal"
                                                            aria-label="Close">
                                                            <span aria-hidden="true">&times;</span>
                                                        </button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <p class="small">Create or edit a material using this form, make
                                                            sure you fill them all.</p>
                                                        <form id="materialSelectionForm">
                                                            <div class="row">
                                                                <div class="col-sm-12">
                                                                    <div class="form-group form-group-default">
                                                                        <label for="materialSelect">Select
                                                                            Material</label>
                                                                        <select id="materialSelect" class="form-control"
                                                                            required>
                                                                            <option value="">Select a material</option>
                                                                            <% materials.forEach(material=> { %>
                                                                                <option value="<%= material._id %>"
                                                                                    data-name="<%= material.name %>"
                                                                                    data-quantity="<%= material.totalQuantity %>"
                                                                                    data-unit="<%= material.unit %>">
                                                                                    <%= material.name %> (Available: <%=
                                                                                            material.totalQuantity %>
                                                                                            <%= material.unit %>)
                                                                                </option>
                                                                                <% }) %>
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6 pe-0">
                                                                    <div class="form-group form-group-default">
                                                                        <label>Quantity</label>
                                                                        <input id="addMaterialQuantity" type="number"
                                                                            class="form-control"
                                                                            placeholder="Enter quantity" min="1"
                                                                            required />
                                                                    </div>
                                                                </div>
                                                                <div class="col-md-6">
                                                                    <div class="form-group form-group-default">
                                                                        <label>Unit</label>
                                                                        <input id="addMaterialUnit" type="text"
                                                                            class="form-control" placeholder="Unit"
                                                                            readonly required />
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </form>
                                                    </div>
                                                    <div class="modal-footer border-0">
                                                        <button type="button" id="addRowButton"
                                                            class="btn btn-primary">Add / Save</button>
                                                        <button type="button" class="btn btn-danger"
                                                            data-bs-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="table-responsive">
                                            <table id="add-row" class="display table table-striped table-hover">
                                                <thead>
                                                    <tr>
                                                        <th>Name material</th>
                                                        <th>Quantity</th>
                                                        <th>Unit</th>
                                                        <th style="width: 10%">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="materialTableBody"
                                                    data-material='<%= JSON.stringify(menus) %>'>
                                                    <!-- Rows will be appended here -->
                                                </tbody>
                                            </table>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="card-action">
                            <button id="submitFormButton1" class="btn btn-success">Submit</button>
                            <button type="button" class="btn btn-danger"
                                onclick="window.location.href='/menu'">Cancel</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<script type="module">
    import { apiFetch } from '../js/apiFetchUtils.js';

    let materials = [];
    let editIndex = null; // Track the index for edit mode
    const materialData = document.getElementById('materialTableBody').getAttribute('data-material');

    try {
        materials = JSON.parse(materialData);
    } catch (e) {
        console.error("Error parsing materials data: ", e);
    }

    // Update unit field based on selected material
    function updateMaterialUnit() {
        const materialSelect = document.getElementById('materialSelect');
        const selectedOption = materialSelect.options[materialSelect.selectedIndex];
        document.getElementById('addMaterialUnit').value = selectedOption ? selectedOption.getAttribute('data-unit') : '';
    }

    // Check for duplicate material in the list
    function isDuplicateMaterial(materialId) {
        return materials.material.some((material, index) => material.materialId._id === materialId && index !== editIndex);
    }

    // Load materials into table
    function loadMaterials() {
        const tableBody = document.getElementById('materialTableBody');
        tableBody.innerHTML = '';

        materials.material.forEach((material, index) => {
            const newRow = document.createElement('tr');
            newRow.innerHTML = `
                <td>${material.materialId.name}</td>
                <td>${material.quantityUsed}</td>
                <td>${material.materialId.unit}</td>
                <td>
                    <div class="form-button-action">
                        <button type="button" class="btn btn-link btn-primary btn-lg" onclick="editRow(${index})">
                            <i class="fa fa-edit"></i>
                        </button>
                        <button type="button" class="btn btn-link btn-danger" onclick="removeRow(${index})">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </td>
            `;
            tableBody.appendChild(newRow);
        });
    }

    document.getElementById('materialSelect').addEventListener('change', updateMaterialUnit);

    // Add or update material in the list
    document.getElementById('addRowButton').addEventListener('click', function () {
    const selectedMaterial = document.getElementById('materialSelect');
    const materialId = selectedMaterial.value;
    const materialName = selectedMaterial.options[selectedMaterial.selectedIndex].dataset.name;
    const materialQuantity = document.getElementById('addMaterialQuantity').value;
    const materialUnit = document.getElementById('addMaterialUnit').value;

    // Validation: Ensure all fields are filled and quantity is positive
    if (!materialId || !materialQuantity || !materialUnit) {
        alert('Please fill all fields before adding.');
        return;
    }

    if (isNaN(materialQuantity) || materialQuantity <= 0) {
        alert('Please enter a positive quantity.');
        return;
    }

    if (isDuplicateMaterial(materialId)) {
        alert('This material has already been added. Edit the existing entry or choose a different material.');
        return;
    }

    const newMaterial = {
        materialId: { _id: materialId, name: materialName, unit: materialUnit },
        quantityUsed: materialQuantity
    };

    if (editIndex !== null) {
        // Update existing material in edit mode
        materials.material[editIndex] = newMaterial;
        editIndex = null;
    } else {
        // Add new material if not in edit mode
        materials.material.push(newMaterial);
    }

    loadMaterials();
    $('#addRowModal').modal('hide');
});


    // Remove a material from the list
    function removeRow(index) {
        materials.material.splice(index, 1);
        loadMaterials();
    }

    // Edit a material in the list
    function editRow(index) {
        const material = materials.material[index];
        editIndex = index; // Set edit mode

        document.getElementById('materialSelect').value = material.materialId._id;
        document.getElementById('addMaterialQuantity').value = material.quantityUsed;
        document.getElementById('addMaterialUnit').value = material.materialId.unit;
        $('#addRowModal').modal('show');
    }
    window.editRow = editRow;
    window.removeRow = removeRow;

    document.getElementById('submitFormButton1').addEventListener('click', async function (event) {
        event.preventDefault();

        const name = document.getElementById('material2').value.trim();
        const price = parseFloat(document.getElementById('price-product').value);

        if (!name) {
            alert('Please enter the material name.');
            return;
        }
        if (isNaN(price) || price <= 0) {
            alert('Please enter a valid price.');
            return;
        }
        if (materials.material.length === 0) {
            alert('Please add at least one material.');
            return;
        }

        const productData = {
            name,
            price,
            material: materials.material.map(material => ({
                materialId: material.materialId._id,
                quantityUsed: material.quantityUsed
            }))
        };

        try {
            await apiFetch(`http://152.42.165.4:3000/api/menu/<%=menus._id%>`, {
                method: 'PUT',
                body: JSON.stringify(productData)
            });
            alert('Product saved successfully!');
            location.reload();
        } catch (error) {
            console.error('Error:', error);
            alert('Failed to save product.');
        }
    });

    document.addEventListener("DOMContentLoaded", loadMaterials);
</script>