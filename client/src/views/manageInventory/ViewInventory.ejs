<div class="container my-4">
    <!-- Search box -->
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <input type="text" id="searchInput" class="form-control" placeholder="Search by name..." onkeyup="filterTable()">
            </div>
        </div>

        <div class="table-responsive">
            <table id="add-row" class="table table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Import</th>
                        <th>Export</th>
                        <th>Quantity</th>
                        <th>Unit</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tfoot>
                    <tr>
                        <th>#</th>
                        <th>Name</th>
                        <th>Import</th>
                        <th>Export</th>
                        <th>Quantity</th>
                        <th>Unit</th>
                        <th>Price</th>
                        <th>Total</th>
                        <th>Action</th>
                    </tr>
                </tfoot>
                <tbody>
                    <% materials.forEach((material, index)=> { %>
                        <tr>
                            <td><%= index + 1 %></td>
                            <td class="material-name"><%= material.name %></td>

                            <td>
                                <div>
                                    <% if (material.importHistory.length) { %>
                                        <ul class="list-unstyled">
                                            <% material.importHistory.forEach((importItem)=> { %>
                                                <li>
                                                    <strong>Date:</strong> <%= importItem.dateImport.substring(0, 10) %><br>
                                                    <strong>Quantity:</strong> <%= importItem.quantity %> <%= material.unit %><br>
                                                    <strong>Price:</strong> $<%= importItem.price %>
                                                </li>
                                            <% }) %>
                                        </ul>
                                    <% } else { %>
                                        N/A
                                    <% } %>
                                </div>
                            </td>

                            <td>
                                <div>
                                    <% if (material.exportHistory.length) { %>
                                        <ul class="list-unstyled">
                                            <% material.exportHistory.forEach((exportItem)=> { %>
                                                <li>
                                                    <strong>Date:</strong> <%= exportItem.dateExport.substring(0, 10) %><br>
                                                    <strong>Quantity:</strong> <%= exportItem.quantity %> <%= material.unit %><br>
                                                    <strong>Price:</strong> $<%= exportItem.price %>
                                                </li>
                                            <% }) %>
                                        </ul>
                                    <% } else { %>
                                        N/A
                                    <% } %>
                                </div>
                            </td>

                            <td><%= material.totalQuantity %></td>
                            <td><%= material.unit %></td>
                            <td>$<%= material.pricePerUnit %></td>
                            <td>$<%= (material.totalQuantity * material.pricePerUnit).toFixed(2) %></td>
                            <td>
                                <div class="btn-group" role="group">
                                  <button type="button" class="btn btn-link btn-primary btn-lg" onclick="redirectToEdit('<%= material._id %>')">
                                        <i class="fa fa-edit"></i>
                                    </button>
                                    <button type="button" class="btn btn-link btn-danger"  onclick="confirmDeleteEmployee('<%= material._id %>', '<%= material.name %>');">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                    <% }) %>
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Search filter script -->
<script>
    function filterTable() {
        const input = document.getElementById('searchInput');
        const filter = input.value.toLowerCase();
        const table = document.getElementById('add-row');
        const rows = table.getElementsByTagName('tr');

        for (let i = 1; i < rows.length; i++) {  // Skip header row
            const nameCell = rows[i].getElementsByClassName('material-name')[0];
            if (nameCell) {
                const nameText = nameCell.textContent || nameCell.innerText;
                rows[i].style.display = nameText.toLowerCase().includes(filter) ? '' : 'none';
            }
        }
    }
</script>

<script>
    function redirectToEdit(id) {
        window.location.href = `/inventory/edit?id=${id}`;
    }
</script>

<script>
    async function confirmDeleteEmployee(materialId, materialName) {
        swal({
            title: "Are you sure?",
            text: `Do you really want to delete ${materialName}?`,
            icon: "warning",
            buttons: true,
            dangerMode: true,
        }).then(async (willDelete) => {
            if (willDelete) {
                try {
                    const updatedMaterial = { status: 'Delete' };
                    const response = await fetch(
                        `http://localhost:3000/api/material/delete/${materialId}`,
                        {
                            method: 'PUT',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify(updatedMaterial),
                        }
                    );

                    if (response.ok) {
                        swal("Material status updated to Delete successfully!", { icon: "success" })
                            .then(() => window.location.reload());
                    } else {
                        const errorData = await response.json();
                        swal("Failed to delete material", errorData.message, "error");
                    }
                } catch (error) {
                    swal("Error", "An error occurred while deleting the material.", "error");
                }
            } else {
                swal("Action canceled", "The material was not deleted.", "info");
            }
        });
    }
</script>

<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
