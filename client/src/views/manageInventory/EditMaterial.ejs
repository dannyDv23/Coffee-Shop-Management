<div class="page-inner">
  <div class="row">
    <div class="col-md-12">
      <div class="card">
        <div class="card-header">
          <div class="card-title">Edit Material</div>
        </div>
        <div class="card-body">
          <div class="row">
            <div class="col-md-6 col-lg-6">
              <div class="form-group">
                <label for="material2">Name Material</label>
                <input type="text" class="form-control" id="material2" placeholder="Enter Name Material"
                  value="<%= material.name %>" required />
              </div>
              <div class="form-group">
                <label for="price2">Price</label>
                <div class="input-group mb-3">
                  <span class="input-group-text">$</span>
                  <input type="number" id="price-input" class="form-control" aria-label="Amount (to the nearest dollar)"
                    min="0" value="<%= material.pricePerUnit %>" required />
                  <span class="input-group-text">.000</span>
                </div>
              </div>
            </div>
            <div class="col-md-6 col-lg-6">
              <div class="form-group">
                <label for="quantity2">Quantity</label>
                <input type="number" class="form-control" id="quantity2" placeholder="Enter Quantity" min="0"
                  value="<%= material.totalQuantity %>" required />
              </div>
              <div class="form-group">
                <label for="defaultSelect">Unit</label>
                <select class="form-select form-control" id="defaultSelect" required>
                  <option value="g" <%= material.unit === 'g' ? 'selected' : '' %>>g</option>
                  <option value="barrel" <%= material.unit === 'barrel' ? 'selected' : '' %>>barrel</option>
                  <option value="bottle" <%= material.unit === 'bottle' ? 'selected' : '' %>>bottle</option>
                  <option value="bag" <%= material.unit === 'bag' ? 'selected' : '' %>>bag</option>
                </select>
              </div>
            </div>
          </div>
          <div class="card-action">
            <button type="button" class="btn btn-success" id="submit-btn">Submit</button>
            <button type="button" class="btn btn-danger" id="cancel-btn">Cancel</button>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="module" src="../js/apiFetchUtils.js"></script>
<script type="module">
  import { apiFetch } from '../js/apiFetchUtils.js';

  // Helper function to validate form fields
  function validateForm() {
    const name = document.getElementById('material2').value.trim();
    const price = parseFloat(document.getElementById('price-input').value);
    const quantity = parseInt(document.getElementById('quantity2').value, 10);
    const unit = document.getElementById('defaultSelect').value;

    if (!name) {
      alert("Material name is required.");
      return false;
    }
    if (isNaN(price) || price < 0) {
      alert("Price must be a non-negative number.");
      return false;
    }
    if (isNaN(quantity) || quantity < 0) {
      alert("Quantity must be a non-negative integer.");
      return false;
    }
    if (!unit) {
      alert("Please select a unit.");
      return false;
    }
    return true;
  }

  // Add input restrictions for negative values
  document.getElementById('price-input').addEventListener('input', function () {
    if (parseFloat(this.value) < 0) this.value = 0;
  });
  document.getElementById('quantity2').addEventListener('input', function () {
    if (parseInt(this.value, 10) < 0) this.value = 0;
  });

  // Function to handle form submission
  async function handleSubmit() {
    if (!validateForm()) {
      // If form validation fails, stop the submission process
      alert("Please input correct field in form before submitting.");
      return;
    }

    const id = '<%= material._id %>'; // Assuming you have the material ID available in your template
    const name = document.getElementById('material2').value;
    const price = parseFloat(document.getElementById('price-input').value);
    const quantity = parseInt(document.getElementById('quantity2').value, 10);
    const unit = document.getElementById('defaultSelect').value;

    const updatedMaterial = {
      name,
      pricePerUnit: price,
      totalQuantity: quantity,
      unit
    };

    try {
      const response = await apiFetch(`http://localhost:3000/api/material/${id}`, {
        method: 'PUT',
        body: JSON.stringify(updatedMaterial),
      });
      
      alert('Material updated successfully!');
      window.location.href = '/inventory';
    } catch (error) {
      console.error('Error:', error);
      alert('Error updating material: ' + error.message);
    }
  }

  // Event Listeners
  document.getElementById('submit-btn').addEventListener('click', handleSubmit);
  document.getElementById('cancel-btn').addEventListener('click', () => {
    window.location.href = '/inventory';
  });
</script>
